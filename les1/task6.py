"""
Задание 6. На закрепление навыков работы с очередью

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Реализуйте класс-структуру "доска задач".

Структура должна предусматривать наличие несольких очередей задач, например
1) базовой, откуда задачи берутся, решаются и отправляются в список решенных
2) очередь на доработку, когда нерешенные задачи из первой очереди отправляются
на корректировку решения
3) список решенных задач, куда задачи перемещаются из базовой очереди или
очереди на доработку

После реализации структуры, проверьте ее работу на различных сценариях

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

#dct1 = {'ex1':'5 + 5 = x','ex2':'2 * x = 10','ex3':'x / 5 = 2'}
ex1 = '5 + 5 = x'
ex2 = '2 * x = 10'
ex3 = 'x / 5 = 2'

class TaskBoard:
    def __init__(self):
        self.task = []
        self.work = []
        self.res = []

    def is_empty(self):
        return self.task == []

    #Функция для помещения задач в очередь ex(1)
    def to_queue_ex(self, ex):
        self.task.insert(0, ex)
#подумать как упростить как в задаче 5 решенной преподом
    # Функция для изъятия задач из очереди ex(1) или work(2)
    def from_queue(self,queue,action):
        if action == 'done' and queue == 1: #решаем и помещаем в res(3) очередь
            done = self.task.pop()
            self.res.insert(0, done)
            return f'Задача ({done}) решена и помещена в очередь решенных'
        elif action == 'revision' and queue == 2:
            revision = self.work.pop()
            self.res.insert(0, revision)
            return f'Задача ({revision}) решена и помещена в очередь решенных'
        else: #задача не решена и помещается в work(2) очередь
            inprogress = self.task.pop()
            self.work.insert(0, inprogress)
            return f'Задача ({inprogress}) решена и помещена в очередь на доработку'

    def size(self):
        return len(self.task)


if __name__ == '__main__':
    TB_obj = TaskBoard()
    #Помещаем задачи в список очереди ex(1)
    TB_obj.to_queue_ex(ex1)
    TB_obj.to_queue_ex(ex2)
    TB_obj.to_queue_ex(ex3)
    #TB_obj.task --> ['x / 5 = 2', '2 * x = 10', '5 + 5 = x']