"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

dct_users = {'usr1':['23','active'],'usr2':['1234','disable'],'usr3':['555','active']}

def auth():
    login = input('Введите логин: ')
    passw = input('Введите пароль: ')
    if dct_users.get(login) is None:
        dct_users.setdefault(login,[passw,'active'])
        print('Ваша УЗ создана, Вы вошли')
    elif dct_users[login][0] == passw and dct_users[login][1] == 'active':
        print('Вы вошли')
    elif dct_users[login][0] == passw and dct_users[login][1] == 'disable':
        print('Вы заблокированы')
    elif dct_users[login][0] != passw:
        print('Вы ввели неправильный пароль')
    elif dct_users.get(login) is None:
        dct_users.setdefault(login,[passw,'active'])
        print('Ваша УЗ создана, Вы вошли')

auth()